int x;
int y;
bool booltest;
void z;
struct employee {
	int x;
	int y;
	bool just;
};

void testFunc() {
}

struct employee Jim;

int testboy(int boy, bool boolBoy, int boyToy, void death) {

	struct e y;

	a = 25;
	boy = "bad";
	stringf = False;
	stringg = True;
	call = calls();
	a.c = b.x;
	a.b.c.d = x.y.z;
	
	call = calls(a);
	
	c = a < 15;
	c = a > b;
	y = a.b +5;
	y = a - c;
	y = a.b * c.c;
	y = a.y / y;
	c = !b;
	c  = i != b;
	b = c && d;
	c = v >= d;
	v = g <= "hahhh";
	uminus = -15;
	b = c || d;
	
	b++;
	heyyyy--;
	a.b.c++;
	cin >> location.placeHere;
	cout << "A String";
	cout << c();
	cout << a + b - C;
	return;
	AHHHHHH();
	AHHHHH2(input1, input2);


	v = ahhh();

	if (thiswork) {
		Imma_cry = true;
	}

	if ((this == this2) && (that == that2)) {
		int Hello;

		Hello = 5;
		Hello++;
	}
	if (yadayadayada) {
		do = this;
	} else {
		int heyy;

		this = works.yay;
	}
	return a;
	return a.a;
	return a + expression;
	return func();

	while(nothing.a != "yeeee") {
		int a;
		this = that;
	}

	while (this != that) {
		that = -this;
	}

	repeat (blahhh) {
		ahhhhh = function();
		ahhhh = 1;
	}

}


